//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/InputSystem/PlayerInputController.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputController : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputController()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputController"",
    ""maps"": [
        {
            ""name"": ""MordernController"",
            ""id"": ""4258e905-f57e-4340-b524-78df222b6d2f"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""6cfa447b-d1c7-4c80-9693-9149bb954d3e"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Run"",
                    ""type"": ""Button"",
                    ""id"": ""4ffd1e7f-2d37-4f83-84be-b2de36a0e550"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""8b981a08-4397-44b6-a917-d898a38f6f5e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Flashlight"",
                    ""type"": ""Button"",
                    ""id"": ""831c2021-0a14-4f2a-8149-fcad2acadbea"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""2033b222-5243-4284-97f1-1e944e2a0e62"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""c5ff6565-1005-4440-81e8-b0b9805749b8"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""b23f8dec-e190-4efd-aabb-06cb6acae1b9"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""449586bc-e7aa-431c-b7c3-ca0fa14ac760"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""c9da1f69-dd05-4d26-89eb-1f690bb2b775"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Gamepad"",
                    ""id"": ""47fd36d5-44c0-4611-a9b2-1a411f4b7643"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""dbdbf03b-c5c0-459f-8a77-ee56aa5b9000"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""dc852885-b543-4f41-8d27-faab51acea1f"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""573a548a-7152-45b0-931e-305488737f9e"",
                    ""path"": ""<Gamepad>/leftStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""012aa8c8-44c9-472e-8702-e28d93496079"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""c2e8c726-469d-49e4-924d-d1f850b2d50f"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1502a594-f2b9-4c39-bf74-fe7cbc4cf61e"",
                    ""path"": ""<Gamepad>/leftStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""719c63dd-8af7-47b1-bc93-146008cac8b2"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""331a1dbc-1040-4206-ad24-6202f22dae87"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9fe9bb3b-97c8-4758-a64f-aeefc4d9d26e"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Flashlight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4a570d78-0b47-4d8b-84fc-6ccb287d27ea"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Flashlight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""TankController"",
            ""id"": ""58618691-8c75-442b-bfe2-5528dad893a4"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""ad3b0348-5057-4531-82af-cf693562556b"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Run"",
                    ""type"": ""Button"",
                    ""id"": ""235d5757-5d5b-461d-b9f6-31913e04634e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""dcb0eb4f-2988-450d-96eb-d54701ea364b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Flashlight"",
                    ""type"": ""Button"",
                    ""id"": ""bb7092c2-8fff-4fdf-b5b6-2013cdad288d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""c902d651-fef0-40bf-8667-8623db1fee1e"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""16f8205a-782d-4192-9051-824370161635"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""235b6797-78c0-4eff-90a5-e105b4ba17a4"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""361a11b3-bc1a-415d-914e-a6a0dc9e69f1"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""4f68d949-2f29-476a-a308-8bd2d4c34418"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Gamepad"",
                    ""id"": ""253defdf-c571-45e5-9d5d-ed903e6e261c"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""cfcaa400-2b04-4e43-9a62-99771ee99d71"",
                    ""path"": ""<Gamepad>/leftStick/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""07f3371f-b248-4cd3-8fa2-c27b23f1dd65"",
                    ""path"": ""<Gamepad>/leftStick/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""7af3dc47-df75-4775-8f64-a8c3c71ed4b8"",
                    ""path"": ""<Gamepad>/rightStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""7d6b93ec-5d61-487b-951a-c5cd7b58990c"",
                    ""path"": ""<Gamepad>/rightStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""380ee1af-f43a-4b44-a531-aa6ac1e0bd94"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""af63ffc4-f663-4e47-bb7e-3e73e89e9250"",
                    ""path"": ""<Gamepad>/leftStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Run"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4a8446ed-2168-4752-a0d6-f1cb915fb470"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8138173b-bddc-4a21-8782-92ca18122190"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e013bd59-9378-47dd-85b7-689e4f9dfb4d"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Flashlight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e9cf93f3-b18e-404c-a92f-70332c56be77"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Flashlight"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // MordernController
        m_MordernController = asset.FindActionMap("MordernController", throwIfNotFound: true);
        m_MordernController_Move = m_MordernController.FindAction("Move", throwIfNotFound: true);
        m_MordernController_Run = m_MordernController.FindAction("Run", throwIfNotFound: true);
        m_MordernController_Interact = m_MordernController.FindAction("Interact", throwIfNotFound: true);
        m_MordernController_Flashlight = m_MordernController.FindAction("Flashlight", throwIfNotFound: true);
        // TankController
        m_TankController = asset.FindActionMap("TankController", throwIfNotFound: true);
        m_TankController_Move = m_TankController.FindAction("Move", throwIfNotFound: true);
        m_TankController_Run = m_TankController.FindAction("Run", throwIfNotFound: true);
        m_TankController_Interact = m_TankController.FindAction("Interact", throwIfNotFound: true);
        m_TankController_Flashlight = m_TankController.FindAction("Flashlight", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // MordernController
    private readonly InputActionMap m_MordernController;
    private IMordernControllerActions m_MordernControllerActionsCallbackInterface;
    private readonly InputAction m_MordernController_Move;
    private readonly InputAction m_MordernController_Run;
    private readonly InputAction m_MordernController_Interact;
    private readonly InputAction m_MordernController_Flashlight;
    public struct MordernControllerActions
    {
        private @PlayerInputController m_Wrapper;
        public MordernControllerActions(@PlayerInputController wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_MordernController_Move;
        public InputAction @Run => m_Wrapper.m_MordernController_Run;
        public InputAction @Interact => m_Wrapper.m_MordernController_Interact;
        public InputAction @Flashlight => m_Wrapper.m_MordernController_Flashlight;
        public InputActionMap Get() { return m_Wrapper.m_MordernController; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MordernControllerActions set) { return set.Get(); }
        public void SetCallbacks(IMordernControllerActions instance)
        {
            if (m_Wrapper.m_MordernControllerActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_MordernControllerActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_MordernControllerActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_MordernControllerActionsCallbackInterface.OnMove;
                @Run.started -= m_Wrapper.m_MordernControllerActionsCallbackInterface.OnRun;
                @Run.performed -= m_Wrapper.m_MordernControllerActionsCallbackInterface.OnRun;
                @Run.canceled -= m_Wrapper.m_MordernControllerActionsCallbackInterface.OnRun;
                @Interact.started -= m_Wrapper.m_MordernControllerActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_MordernControllerActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_MordernControllerActionsCallbackInterface.OnInteract;
                @Flashlight.started -= m_Wrapper.m_MordernControllerActionsCallbackInterface.OnFlashlight;
                @Flashlight.performed -= m_Wrapper.m_MordernControllerActionsCallbackInterface.OnFlashlight;
                @Flashlight.canceled -= m_Wrapper.m_MordernControllerActionsCallbackInterface.OnFlashlight;
            }
            m_Wrapper.m_MordernControllerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Run.started += instance.OnRun;
                @Run.performed += instance.OnRun;
                @Run.canceled += instance.OnRun;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @Flashlight.started += instance.OnFlashlight;
                @Flashlight.performed += instance.OnFlashlight;
                @Flashlight.canceled += instance.OnFlashlight;
            }
        }
    }
    public MordernControllerActions @MordernController => new MordernControllerActions(this);

    // TankController
    private readonly InputActionMap m_TankController;
    private ITankControllerActions m_TankControllerActionsCallbackInterface;
    private readonly InputAction m_TankController_Move;
    private readonly InputAction m_TankController_Run;
    private readonly InputAction m_TankController_Interact;
    private readonly InputAction m_TankController_Flashlight;
    public struct TankControllerActions
    {
        private @PlayerInputController m_Wrapper;
        public TankControllerActions(@PlayerInputController wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_TankController_Move;
        public InputAction @Run => m_Wrapper.m_TankController_Run;
        public InputAction @Interact => m_Wrapper.m_TankController_Interact;
        public InputAction @Flashlight => m_Wrapper.m_TankController_Flashlight;
        public InputActionMap Get() { return m_Wrapper.m_TankController; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(TankControllerActions set) { return set.Get(); }
        public void SetCallbacks(ITankControllerActions instance)
        {
            if (m_Wrapper.m_TankControllerActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_TankControllerActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_TankControllerActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_TankControllerActionsCallbackInterface.OnMove;
                @Run.started -= m_Wrapper.m_TankControllerActionsCallbackInterface.OnRun;
                @Run.performed -= m_Wrapper.m_TankControllerActionsCallbackInterface.OnRun;
                @Run.canceled -= m_Wrapper.m_TankControllerActionsCallbackInterface.OnRun;
                @Interact.started -= m_Wrapper.m_TankControllerActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_TankControllerActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_TankControllerActionsCallbackInterface.OnInteract;
                @Flashlight.started -= m_Wrapper.m_TankControllerActionsCallbackInterface.OnFlashlight;
                @Flashlight.performed -= m_Wrapper.m_TankControllerActionsCallbackInterface.OnFlashlight;
                @Flashlight.canceled -= m_Wrapper.m_TankControllerActionsCallbackInterface.OnFlashlight;
            }
            m_Wrapper.m_TankControllerActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Run.started += instance.OnRun;
                @Run.performed += instance.OnRun;
                @Run.canceled += instance.OnRun;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @Flashlight.started += instance.OnFlashlight;
                @Flashlight.performed += instance.OnFlashlight;
                @Flashlight.canceled += instance.OnFlashlight;
            }
        }
    }
    public TankControllerActions @TankController => new TankControllerActions(this);
    public interface IMordernControllerActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnRun(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnFlashlight(InputAction.CallbackContext context);
    }
    public interface ITankControllerActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnRun(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnFlashlight(InputAction.CallbackContext context);
    }
}
